 /** ENCRYPTION **/

 /** STEP 1: CREATE A MASTER KEY (THIS CAN BE SKIPPED IF THE SQL SERVER ALREADY HAS A MASTER KEY CREATED) **/
 
 USE master;
 CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'M@st3rK3y';
 GO


 /**CREATE A CERTIFICATE. THIS CERTIFICATE PROTECTS THE DATABASE ENCRYPTION KEY THAT WILL BE CREATED IN THE NEXT STEP. BY DEFAULT THE CERT IS PROTECTED BY THE MASTER KEY **/

 CREATE CERTIFICATE TestSQLCert_I2
 WITH SUBJECT = 'TestCertificate2'

 GO
 /**CERTIFICATE PROTECTED BY PASSWORD INSTED OF THE MASTER KEY**/

 CREATE CERTIFICATE TestSQLCert_I2_2
 ENCRYPTION BY PASSWORD = 'TestC3rT'
 WITH SUBJECT = 'TestCertificate2'

 GO


 /** CHECK TO MAKE SURE THE CERTIFICATE IS CREATED **/
 SELECT *
 FROM sys.certificates

/** IMMEDIATELY BACKUP THE CERTIFICATE USING A PRIVATE KEY AND A PASSWORD **/

USE master
GO

BACKUP CERTIFICATE TestSQLCert_I2
TO FILE = 'C:\TestSQLCert_I2_bkp'
WITH PRIVATE KEY
(FILE = 'C:\TestSQLCert_I2_Pvt_Key'
, ENCRYPTION BY PASSWORD = 'M@s5t3rKeyPr1v@t3'
)

/** CREATE A NEW  DATABASE **/

 CREATE DATABASE EncryptionTest2
 GO


 /**CREATE A SYMMETRIC KEY TO ENCRYPT THE DATABASE. THE SYMMETRIC KEY IS STORED WITHIN THE DATABASE BUT IS PROTEDTED BY THE CERTIFICATE WE CREATED EARLIER **/
 USE EncryptionTest2
 GO

CREATE DATABASE ENCRYPTION KEY 
WITH ALGORITHM = AES_128
ENCRYPTION BY SERVER CERTIFICATE TestSQLCert_I2
GO


/** TURN ON ENCRYPTION **/
ALTER DATABASE EncryptionTest2
SET ENCRYPTION ON
GO


/**************TESTING PART********/

/**BACKUP THE DATABASE **/
BACKUP DATABASE EncryptionTest2
TO DISK = 'C:\EncryptionTest2.BAK'
WITH STATS = 10
GO


/***RESTORE THE CERTIFICATE ON THE NEW SERVER***/

USE master
GO

CREATE CERTIFICATE TestSQLCert_I2
FROM FILE = 'C:\TestSQLCert_I2_bkp'
WITH PRIVATE KEY 
( FILE = 'C:\TestSQLCert_I2_Pvt_Key'
, DECRYPTION BY PASSWORD = 'M@s5t3rKeyPr1v@t3'
)
GO


/*RESTORE THE DATABASE**/
RESTORE FILELISTONLY
FROM DISK = 'C:\EncryptionTest2.BAK'

RESTORE DATABASE EncryptionTest2
FROM DISK = 'C:\EncryptionTest2.BAK'
WITH MOVE 'EncryptionTest2' TO  'C:\EncryptionTest2.mdf'
, MOVE 'EncryptionTest2_log' TO 'C:\EncryptionTest2_log.ldf'
, RECOVERY
, STATS = 10

DBCC MEMORYSTATUS

SELECT *
FROM sys.certificates

SELECT is_master_key_encrypted_by_server
FROM sys.databases
WHERE is_master_key_encrypted_by_server = 1 

SELECT DB_NAME(database_id), *
FROM sys.dm_database_encryption_keys

SELECT * 
  FROM master.sys.symmetric_keys AS SK 
 WHERE SK.name = '##MS_ServiceMasterKey##'

 SELECT  SK.name,SK.algorithm_desc,SK.create_date,SK.modify_date,SK.key_guid
  FROM sys.symmetric_keys AS SK

  SELECT * 
  FROM sys.symmetric_keys AS SK
 WHERE SK.name = '##MS_DatabaseMasterKey##';

 ALTER MASTER KEY DROP ENCRYPTION BY SERVICE MASTER KEY

 DROP MASTER KEY

 SELECT C.name,C.certificate_id,C.pvt_key_encryption_type_desc,C.subject,C.start_date,C.expiry_date
  FROM sys.certificates AS C

  SELECT CERTENCODED(CERT_ID('ACertificate'));

  CREATE CERTIFICATE [ACertificate] FROM BINARY = 0x308201AB30820114A003020102021035C0FB3E31F2929742E56FA4A197CC31300D06092A864886F70D0101050500301431123010060
  3550403130941205375626A656374301E170D3134303531353137333331355A170D3135303531353137333331355A3014311230100603550403130941205375626A65637430819F300D06092A8648
  86F70D010101050003818D00308189028181008A14AC241A0103E8BDBAD7AC3545AD0D5E11EC320CA7AED2F18BC001D42A3E4F35D0F67D69EF1E4CEF2281C773A3C916224761044445FA765F235C1
  90E11BF9900961349194B5CE114B4ACA387F80ADDD92595AF8E020789C508BA64AA417850C40F266E09CA017AFF9273FD71FEDA3CA8B0FE6351998B4EFE65E50039381C4B0203010001300D06092A
  864886F70D010105050003818100108D1338D10F80FB63D70807B48942DAE4A4DC7648E2316D8F46FA12B60983EFD96900DC92934C0E1DFF185096A24468C6BC658E2D6FB32FE3C95DF5E70B07DFB
  476D287F65CD9DA1516F3F7EAB323142F30300386823EB6D72319BEDE748C21A552106CC9818817895078980276C56FCE42ACA9B66AE4AC6097E9D09179A875;

  SELECT 'CREATE CERTIFICATE ' +
       QUOTENAME(C.name) +
       ' FROM BINARY = ' + 
       CONVERT(NVARCHAR(MAX),CERTENCODED(C.certificate_id),1) + 
       ';' AS create_cmd
  FROM sys.certificates AS C
 WHERE C.name = 'ACertificate';


 --BACKING UP A CERTIFICATE PROTECTED BY PASSWORD AND NOT THE DATABASE MASTER KEY--

 BACKUP CERTIFICATE ACertificate 
  TO FILE ='C:\temp\ACertificate.cert'
  WITH PRIVATE KEY(
    FILE = 'C:\temp\ACertificate.prvk',
    DECRYPTION BY PASSWORD = '%%%%%%%%%%',
    ENCRYPTION BY PASSWORD = '**********'
  );

  select * from sys.dm_database_encryption_keys go

  ALTER DATABASE tde SET ENCRYPTION OFF go

  drop database encryption key go

  SELECT name, is_encrypted FROM sys.databases where name = 'tde' go

  drop database tde go 
  --check the certificate whether exists or not SELECT name, pvt_key_encryption_type_desc FROM sys.certificates WHERE name = 'TDECert' go

  DROP CERTIFICATE TDECert go

  --FINDING OUT WHICH DATABASE IS ENCRYPTED BY WHAT CERTIFICATE

SELECT DB_NAME (database_id) AS database_name, encryptor_type, sc.[name], sc.pvt_key_encryption_type_desc, sc.pvt_key_last_backup_date--  *
FROM sys.dm_database_encryption_keys sdk
INNER JOIN sys.certificates sc
ON sdk.encryptor_thumbprint = sc.thumbprint
WHERE database_id > 4


CREATE CERTIFICATE test_cert
ENCRYPTION BY PASSWORD = 'T3stP@55w0rd'
WITH SUBJECT = 'cert_test'

BACKUP CERTIFICATE test_cert
TO FILE = 'c:\Test2\test_cert.bkp'
WITH PRIVATE KEY
( FILE = 'c:\Test2\test_cert_pvt.prvk'
, DECRYPTION BY PASSWORD = 'T3stP@55w0rd'
, ENCRYPTION BY PASSWORD = 'T3stP@55w0rd_pvt')

 BACKUP CERTIFICATE ACertificate 
  TO FILE ='C:\temp\ACertificate.cert'
  WITH PRIVATE KEY(
    FILE = 'C:\temp\ACertificate.prvk',
    DECRYPTION BY PASSWORD = '%%%%%%%%%%',
    ENCRYPTION BY PASSWORD = '**********'
  );


SELECT *
FROM sys.certificates

CREATE DATABASE TDE_Test_DB

USE TDE_Test_DB
GO

CREATE DATABASE ENCRYPTION KEY
WITH ALGORITHM = AES_128
ENCRYPTION BY SERVER CERTIFICATE test_cert_2
GO

CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'T3stP@55w0rd'

CREATE CERTIFICATE test_cert_2
WITH SUBJECT ='test_cert_2'

USE TDE_Test_DB
DROP DATABASE ENCRYPTION KEY 
GO

BACKUP DATABASE TDE_Test_DB
TO DISK = 'C:\Test2\TDE_Test_DB.BAK'
